version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: dev-kafka
    networks: [broker-kafka]
    ports:
      - "9092:9092"   # clientes no host usam localhost:9092 (PLAINTEXT_HOST)
    environment:
      # ---- KRaft ----
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # ---- Listeners ----
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      # ---- Tópicos internos ----
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

      # ---- Armazenamento ----
      # Dica: no cp-kafka, costuma ser KAFKA_CLUSTER_ID; se CLUSTER_ID não formatar, troque:
      # KAFKA_CLUSTER_ID: "q1Sh-2JgTdui_wkF9b1Y5Q"
      CLUSTER_ID: "q1Sh-2JgTdui_wkF9b1Y5Q"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "bash", "-lc", "kafka-topics.sh --bootstrap-server localhost:9092 --list > /dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 30

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: dev-kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    networks: [broker-kafka]                   # << entrar na mesma rede
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"   # << usar listener interno
      DYNAMIC_CONFIG_ENABLED: "true"
    ports:
      - "8082:8080"

networks:
  broker-kafka:
    driver: bridge

volumes:
  kafka_data:
